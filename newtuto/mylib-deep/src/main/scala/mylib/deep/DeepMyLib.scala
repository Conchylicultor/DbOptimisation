/* Generated by Purgatory 2014-2015 */

package mylib.deep

import ch.epfl.data.sc.pardis
import pardis.ir._
import pardis.types.PardisTypeImplicits._
import pardis.effects._
import pardis.deep._
import pardis.deep.scalalib._
import pardis.deep.scalalib.collection._
import pardis.deep.scalalib.io._
trait MyLibOps extends Base with ListOps with ScalaCoreOps {  
  // Type representation
  val MyLibType = MyLibIRs.MyLibType
  implicit val typeMyLib: TypeRep[MyLib] = MyLibType
  implicit class MyLibRep(self : Rep[MyLib]) {

  }
  object MyLib {

  }
  // constructors

  // IR defs
  
  // method definitions
  
  type MyLib = mylib.shallow.MyLib
}
object MyLibIRs extends Base {
  import ListIRs._
  import ScalaCoreIRs._
  // Type representation
  case object MyLibType extends TypeRep[MyLib] {
    def rebuild(newArguments: TypeRep[_]*): TypeRep[_] = MyLibType
    val name = "MyLib"
    val typeArguments = Nil
  }
      implicit val typeMyLib: TypeRep[MyLib] = MyLibType
  // case classes
  
  type MyLib = mylib.shallow.MyLib
}
trait MyLibImplicits extends MyLibOps { 
  // Add implicit conversions here!
}
trait MyLibImplementations extends MyLibOps { 

}

trait MyLibPartialEvaluation extends MyLibComponent with BasePartialEvaluation {  
  // Immutable field inlining 

  // Mutable field inlining 
  // Pure function partial evaluation
}
trait MyLibComponent extends MyLibOps with MyLibImplicits {  }

// QUASI GENERATED CODE:

import ch.epfl.data.sc.pardis.quasi.anf.{ BaseExt, BaseExtIR }
import ch.epfl.data.sc.pardis.quasi.TypeParameters.MaybeParamTag

object MyLibQuasiNodes extends BaseExtIR {
  import MyLibIRs._
  import ListQuasiNodes._
  import ScalaCoreQuasiNodes._
  // case classes
  type MyLib = mylib.shallow.MyLib
}

trait MyLibExtOps extends BaseExt with ListExtOps with ScalaCoreExtOps {
  
  import MyLibQuasiNodes._
  import ch.epfl.data.sc.pardis.quasi.OverloadHackObj._
  import ListQuasiNodes._
  import ScalaCoreQuasiNodes._
  implicit class MyLibRep(self : Rep[MyLib]) {
  }
  object MyLib {
  }
  // constructors
  
  // method definitions
  type MyLib = mylib.shallow.MyLib
}
